Create EC2 Instance using CLI
	Set the Region: AZ=`curl -s <URL>`
			export AWS_DEFAULT_REGION=${AZ::-1}
	Step 1 Retrieve AMI:AMI=$(aws ssm get-parameters \
    					--names <ParameterName> \
    					--query <QueryExpression> \
    					--output <OutputFormat>)
	Step 2 Retrieve Subnet: SUBNET=$(aws ec2 describe-subnets \
    					--filters Name=<FilterKey>,Values=<FilterValue> \
    					--query <QueryExpression> \
    					--output <OutputFormat>)
	Step 3 Retrieve the security group: SG=$(aws ec2 describe-security-groups \
    					--filters Name=<FilterKey>,Values=<FilterValue> \
    					--query <QueryExpression> \
    					--output <OutputFormat>)
	Step 4 Download a user data script: wget <URL>
				   Example: wget https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/CUR-TF-100-RSJAWS-3-23732/171-lab-JAWS-create-ec2/s3/UserData.txt
	Step 5 Launch Instance: INSTANCE=$(
				aws ec2 run-instances \
  				--image-id <AMI_ID> \
  				--subnet-id <SUBNET_ID> \
  				--security-group-ids <SECURITY_GROUP_ID> \
  				--user-data file://<PATH_TO_USER_DATA_SCRIPT> \
  				--instance-type <INSTANCE_TYPE> \
  				--tag-specifications 'ResourceType=instance,Tags=[{Key=<TAG_KEY>,Value=<TAG_VALUE>}]' \
  				--query 'Instances[*].InstanceId' \
  				--output text
					)
	Monitor Status of Instance: aws ec2 describe-instances --instance-ids $INSTANCE
	Step 6 Test the web server: aws ec2 describe-instances --instance-ids $INSTANCE --query Reservations[].Instances[].PublicDnsName --output text

	Common Query Expression (Subnet)
Get Subnet ID by Name:	Subnets[0].SubnetId
List all Subnets:	Subnets[*].SubnetId
List Subnets in a VPC:	Subnets[*].SubnetId (with vpc-id filter)
Get Public Subnets:	map-public-ip-on-launch,Values=true
Get Private Subnets:	map-public-ip-on-launch,Values=false

	Common Query Expression (Security Group)
Get Security Group ID by name:		SecurityGroups[0].GroupId
List all Security Groups (Name & ID):	SecurityGroups[*].[GroupName,GroupId]
Get Inbound Rules for a group:		SecurityGroups[0].IpPermissions
Get Security Group details (Name, Desc, VPC):	SecurityGroups[0].[GroupName, Description, VpcId]
Find Security Groups attached to an EC2 instance:Reservations[*].Instances[*].SecurityGroups[*].[GroupName,GroupId]

	Common Query Expression (Instance)
Get instance state:		Reservations[].Instances[].State.Name	
Get public IP:			Reservations[].Instances[].PublicIpAddress
Get Private and Public IP Addresses:	Reservations[].Instances[].{InstanceID: InstanceId, PublicIP: PublicIpAddress, PrivateIP: PrivateIpAddress}	
Get launch time:		Reservations[].Instances[].LaunchTime	
Get security group name:	Reservations[].Instances[].SecurityGroups[].GroupName	
Get VPC ID:			Reservations[].Instances[].VpcId	
Get only running instances:	Reservations[].Instances[?State.Name==running].[InstanceId]
	- stopped
	- pending
Get the IAM Role Associated:	Reservations[].Instances[].IamInstanceProfile.Arn
Get All Key-Value Pairs:	Reservations[].Instances[].[InstanceId, State.Name, InstanceType, PublicIpAddress, PrivateIpAddress]
Get Instance Type:		Reservations[].Instances[].InstanceType
Get Security Group Name and ID:	Reservations[].Instances[].SecurityGroups[].{SG_Name: GroupName, SG_ID: GroupId}
Get Attached EBS Volume IDs:	Reservations[].Instances[].BlockDeviceMappings[].Ebs.VolumeId
Get Instances with Specific Root Device Type (EBS or Instance Store): Reservations[].Instances[?RootDeviceType==`ebs`].InstanceId

